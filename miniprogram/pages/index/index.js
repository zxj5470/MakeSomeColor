"use strict";
var app = getApp();
function toIntColor(r, g, b) {
    return ((1 << 24) + (r << 16) + (g << 8) + b);
}
function toHex(r, g, b, a) {
    a;
    var hex = "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
    return hex;
}
Page({
    data: {
        motto: 'Hello World',
        userInfo: {},
        hasUserInfo: false,
        canIUse: wx.canIUse('button.open-type.getUserInfo'),
        r: 0x66,
        g: 0xcc,
        b: 0xff,
        a: 0,
        colorHex: "#66ccff",
        colorInt: toIntColor(0x66, 0xcc, 0xff)
    },
    onLoad: function () {
    },
    sliderChangingR: function (e) {
        this.setData({
            r: e.detail.value,
            colorHex: toHex(this.data.r, this.data.g, this.data.b),
            colorInt: toIntColor(this.data.r, this.data.g, this.data.b)
        });
    },
    sliderChangingG: function (e) {
        this.setData({
            g: e.detail.value,
            colorHex: toHex(this.data.r, this.data.g, this.data.b),
            colorInt: toIntColor(this.data.r, this.data.g, this.data.b)
        });
    },
    sliderChangingB: function (e) {
        this.setData({
            b: e.detail.value,
            colorHex: toHex(this.data.r, this.data.g, this.data.b),
            colorInt: toIntColor(this.data.r, this.data.g, this.data.b)
        });
    },
    sliderChangingA: function (e) {
        this.setData({
            a: e.detail.value,
            colorHex: toHex(this.data.r, this.data.g, this.data.b),
            colorInt: toIntColor(this.data.r, this.data.g, this.data.b)
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsSUFBTSxHQUFHLEdBQUcsTUFBTSxFQUFjLENBQUE7QUFDaEMsU0FBUyxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTO0lBQy9DLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNsRCxDQUFDO0FBQ0QsU0FBUyxLQUFLLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBVTtJQUN0RCxDQUFDLENBQUM7SUFDRixJQUFJLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzdFLE9BQU8sR0FBRyxDQUFDO0FBQ2YsQ0FBQztBQUVELElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLEtBQUssRUFBRSxhQUFhO1FBQ3BCLFFBQVEsRUFBRSxFQUFFO1FBQ1osV0FBVyxFQUFFLEtBQUs7UUFDbEIsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsOEJBQThCLENBQUM7UUFDbkQsQ0FBQyxFQUFFLElBQUk7UUFDUCxDQUFDLEVBQUUsSUFBSTtRQUNQLENBQUMsRUFBRSxJQUFJO1FBQ1AsQ0FBQyxFQUFFLENBQUM7UUFDSixRQUFRLEVBQUUsU0FBUztRQUNuQixRQUFRLEVBQUUsVUFBVSxDQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsSUFBSSxDQUFDO0tBQ3ZDO0lBQ0QsTUFBTTtJQUNOLENBQUM7SUFDRCxlQUFlLFlBQUMsQ0FBWTtRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSztZQUNqQixRQUFRLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3RELFFBQVEsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDOUQsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELGVBQWUsWUFBQyxDQUFZO1FBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1lBQ2pCLFFBQVEsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDdEQsUUFBUSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUM5RCxDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsZUFBZSxZQUFDLENBQVk7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUs7WUFDakIsUUFBUSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN0RCxRQUFRLEVBQUUsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzlELENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxlQUFlLFlBQUMsQ0FBWTtRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSztZQUNqQixRQUFRLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3RELFFBQVEsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDOUQsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGluZGV4LnRzXG4vLyDojrflj5blupTnlKjlrp7kvotcbmNvbnN0IGFwcCA9IGdldEFwcDxJQXBwT3B0aW9uPigpXG5mdW5jdGlvbiB0b0ludENvbG9yKHI6IG51bWJlciwgZzogbnVtYmVyLCBiOiBudW1iZXIpe1xuICAgIHJldHVybiAoKDEgPDwgMjQpICsgKHIgPDwgMTYpICsgKGcgPDwgOCkgKyBiKTtcbn1cbmZ1bmN0aW9uIHRvSGV4KHI6IG51bWJlciwgZzogbnVtYmVyLCBiOiBudW1iZXIsIGE/OiBudW1iZXIpIHtcbiAgICBhO1xuICAgIGxldCBoZXggPSBcIiNcIiArICgoMSA8PCAyNCkgKyAociA8PCAxNikgKyAoZyA8PCA4KSArIGIpLnRvU3RyaW5nKDE2KS5zbGljZSgxKTtcbiAgICByZXR1cm4gaGV4O1xufVxuXG5QYWdlKHtcbiAgICBkYXRhOiB7XG4gICAgICAgIG1vdHRvOiAnSGVsbG8gV29ybGQnLFxuICAgICAgICB1c2VySW5mbzoge30sXG4gICAgICAgIGhhc1VzZXJJbmZvOiBmYWxzZSxcbiAgICAgICAgY2FuSVVzZTogd3guY2FuSVVzZSgnYnV0dG9uLm9wZW4tdHlwZS5nZXRVc2VySW5mbycpLFxuICAgICAgICByOiAweDY2LFxuICAgICAgICBnOiAweGNjLFxuICAgICAgICBiOiAweGZmLFxuICAgICAgICBhOiAwLFxuICAgICAgICBjb2xvckhleDogXCIjNjZjY2ZmXCIsXG4gICAgICAgIGNvbG9ySW50OiB0b0ludENvbG9yKDB4NjYsMHhjYywweGZmKVxuICAgIH0sXG4gICAgb25Mb2FkKCkge1xuICAgIH0sXG4gICAgc2xpZGVyQ2hhbmdpbmdSKGU6IEV2ZW50RGF0YSkge1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgcjogZS5kZXRhaWwudmFsdWUsXG4gICAgICAgICAgICBjb2xvckhleDogdG9IZXgodGhpcy5kYXRhLnIsIHRoaXMuZGF0YS5nLCB0aGlzLmRhdGEuYiksXG4gICAgICAgICAgICBjb2xvckludDogdG9JbnRDb2xvcih0aGlzLmRhdGEuciwgdGhpcy5kYXRhLmcsIHRoaXMuZGF0YS5iKVxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIHNsaWRlckNoYW5naW5nRyhlOiBFdmVudERhdGEpIHtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIGc6IGUuZGV0YWlsLnZhbHVlLFxuICAgICAgICAgICAgY29sb3JIZXg6IHRvSGV4KHRoaXMuZGF0YS5yLCB0aGlzLmRhdGEuZywgdGhpcy5kYXRhLmIpLFxuICAgICAgICAgICAgY29sb3JJbnQ6IHRvSW50Q29sb3IodGhpcy5kYXRhLnIsIHRoaXMuZGF0YS5nLCB0aGlzLmRhdGEuYilcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBzbGlkZXJDaGFuZ2luZ0IoZTogRXZlbnREYXRhKSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICBiOiBlLmRldGFpbC52YWx1ZSxcbiAgICAgICAgICAgIGNvbG9ySGV4OiB0b0hleCh0aGlzLmRhdGEuciwgdGhpcy5kYXRhLmcsIHRoaXMuZGF0YS5iKSxcbiAgICAgICAgICAgIGNvbG9ySW50OiB0b0ludENvbG9yKHRoaXMuZGF0YS5yLCB0aGlzLmRhdGEuZywgdGhpcy5kYXRhLmIpXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgc2xpZGVyQ2hhbmdpbmdBKGU6IEV2ZW50RGF0YSkge1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgYTogZS5kZXRhaWwudmFsdWUsXG4gICAgICAgICAgICBjb2xvckhleDogdG9IZXgodGhpcy5kYXRhLnIsIHRoaXMuZGF0YS5nLCB0aGlzLmRhdGEuYiksXG4gICAgICAgICAgICBjb2xvckludDogdG9JbnRDb2xvcih0aGlzLmRhdGEuciwgdGhpcy5kYXRhLmcsIHRoaXMuZGF0YS5iKVxuICAgICAgICB9KTtcbiAgICB9XG59KVxuIl19